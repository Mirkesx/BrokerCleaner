version: '3'

services:
  scorpio-zookeeper:
    container_name: scorpio-zookeeper
    image: zookeeper
    hostname: zookeeper
    labels:
      org.nec: 'tutorial'
    networks:
      - scorpio
    ports:
      - "2181"
    logging:
      driver: none
    healthcheck:
      test: ["CMD-SHELL", "nc -z zookeeper 2181"]
      interval: 5s
  scorpio-kafka:
    container_name: scorpio-kafka
    image: bitnami/kafka
    hostname: kafka
    labels:
      org.nec: 'tutorial'
    networks:
      - scorpio
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - scorpio-zookeeper
    logging:
      driver: none
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
  scorpio-postgres:
    container_name: scorpio-postgres
    image: postgis/postgis
    hostname: postgres
    labels:
      org.nec: 'tutorial'
    networks:
      - scorpio
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    logging:
      driver: none
    volumes:
      - scorpio-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ngb"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s
  scorpio:
    container_name: scorpio
    image: scorpiobroker/all-in-one-runner:${SCORPIO_VERSION}
    hostname: scorpio
    labels:
      org.nec: 'tutorial'
    networks:
      - scorpio
    ports:
      - "9090:9090"
    depends_on:
      - scorpio-postgres
      - scorpio-kafka

networks:
  scorpio:
    labels:
      org.nec: 'tutorial'

volumes:
  scorpio-db: ~