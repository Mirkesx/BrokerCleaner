version: "3.9"
services:
  stellio-kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: "${CONTAINER_NAME_PREFIX}stellio-kafka"
    hostname: kafka
    ports:
      - "${KAFKA_PORT:-29092}:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://stellio-kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@stellio-kafka:29093"
      KAFKA_LISTENERS: CONTROLLER://stellio-kafka:29093,PLAINTEXT://stellio-kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
    networks:
      - stellio
    healthcheck:
      test: nc -z localhost 29092 || exit -1
      start_period: 15s
      interval: 30s
      timeout: 10s
      retries: 3
  stellio-postgres:
    image: stellio/stellio-timescale-postgis:16-2.17.2-3.5
    container_name: "${CONTAINER_NAME_PREFIX}stellio-postgres"
    hostname: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - POSTGRES_DBNAME=${POSTGRES_DBNAME}
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,timescaledb,pgcrypto
      - ACCEPT_TIMESCALE_TUNING=TRUE
    networks:
      - stellio
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - stellio-postgres-storage:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U stellio"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s
  stellio-api-gateway:
    container_name: "${CONTAINER_NAME_PREFIX}stellio-api-gateway"
    image: stellio/stellio-api-gateway:${STELLIO_DOCKER_TAG}
    hostname: api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=${ENVIRONMENT}
    networks:
      - stellio
    ports:
      - "${API_GATEWAY_PORT:-8080}:8080"
    healthcheck:
      test: curl --fail -X OPTIONS -s localhost:8080/ngsi-ld/v1/entities/ || exit 1
      start_period: 45s
  stellio-search-service:
    container_name: "${CONTAINER_NAME_PREFIX}stellio-search-service"
    image: stellio/stellio-search-service:${STELLIO_DOCKER_TAG}
    hostname: search-service
    environment:
      - SPRING_PROFILES_ACTIVE=${ENVIRONMENT}
      - SPRING_R2DBC_URL=r2dbc:postgresql://postgres/${STELLIO_SEARCH_DB_DATABASE}
      - SPRING_FLYWAY_URL=jdbc:postgresql://postgres/${STELLIO_SEARCH_DB_DATABASE}
      - SPRING_R2DBC_USERNAME=${POSTGRES_USER}
      - SPRING_R2DBC_PASSWORD=${POSTGRES_PASS}
      - APPLICATION_AUTHENTICATION_ENABLED=${STELLIO_AUTHENTICATION_ENABLED}
      - APPLICATION_TENANTS_0_ISSUER=${APPLICATION_TENANTS_0_ISSUER}
      - APPLICATION_TENANTS_0_NAME=${APPLICATION_TENANTS_0_NAME}
      - APPLICATION_TENANTS_0_DBSCHEMA=${APPLICATION_TENANTS_0_DBSCHEMA}
      - APPLICATION_PAGINATION_LIMIT-DEFAULT=${APPLICATION_PAGINATION_LIMIT_DEFAULT}
      - APPLICATION_PAGINATION_LIMIT-MAX=${APPLICATION_PAGINATION_LIMIT_MAX}
    networks:
      - stellio
    ports:
      - "${SEARCH_SERVICE_PORT:-8083}:8083"
    depends_on:
      stellio-postgres:
        condition: service_healthy
      stellio-kafka:
        condition: service_started
    healthcheck:
      test: curl --fail -X OPTIONS -s stellio-api-gateway:8080/ngsi-ld/v1/entities/ || exit 1
      start_period: 45s
  stellio-subscription-service:
    container_name: "${CONTAINER_NAME_PREFIX}stellio-subscription-service"
    image: stellio/stellio-subscription-service:${STELLIO_DOCKER_TAG}
    hostname: subscription-service
    environment:
      - SPRING_PROFILES_ACTIVE=${ENVIRONMENT}
      - SPRING_R2DBC_URL=r2dbc:postgresql://postgres/${STELLIO_SUBSCRIPTION_DB_DATABASE}
      - SPRING_FLYWAY_URL=jdbc:postgresql://postgres/${STELLIO_SUBSCRIPTION_DB_DATABASE}
      - SPRING_R2DBC_USERNAME=${POSTGRES_USER}
      - SPRING_R2DBC_PASSWORD=${POSTGRES_PASS}
      - APPLICATION_AUTHENTICATION_ENABLED=${STELLIO_AUTHENTICATION_ENABLED}
      - APPLICATION_TENANTS_0_ISSUER=${APPLICATION_TENANTS_0_ISSUER}
      - APPLICATION_TENANTS_0_NAME=${APPLICATION_TENANTS_0_NAME}
      - APPLICATION_TENANTS_0_DBSCHEMA=${APPLICATION_TENANTS_0_DBSCHEMA}
      - SUBSCRIPTION_ENTITY_SERVICE-URL=${SUBSCRIPTION_ENTITY_SERVICE_URL}
      - SUBSCRIPTION_STELLIO_URL=${SUBSCRIPTION_STELLIO_URL}
      - APPLICATION_PAGINATION_LIMIT-DEFAULT=${APPLICATION_PAGINATION_LIMIT_DEFAULT}
      - APPLICATION_PAGINATION_LIMIT-MAX=${APPLICATION_PAGINATION_LIMIT_MAX}
    networks:
      - stellio
    ports:
      - "${SUBSCRIPTION_SERVICE_PORT:-8084}:8084"
    depends_on:
      stellio-postgres:
        condition: service_healthy
      stellio-kafka:
        condition: service_started
    healthcheck:
      test: curl --fail -X OPTIONS -s stellio-api-gateway:8080/ngsi-ld/v1/entities/ || exit 1
      start_period: 30s

networks:
  stellio:
    labels:
      org.egm: "tutorial"

volumes:
  stellio-postgres-storage:
    name: "${CONTAINER_NAME_PREFIX}stellio-postgres-storage"
